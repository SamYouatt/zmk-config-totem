//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// e
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "key_pos.h"

#define BASE 0
#define SYM  1
#define NUM  2
#define NAV  3
#define FUN  4
#define MISC 5

/ {
    behaviors {
        quick_shift: quick_shift {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };

        shft: shft {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&quick_shift>;
        };

        hrm: home_row_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        lh: left_home_row {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <300>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <32 33 34 35 36 37 5 6 7 8 9 15 16 17 18 19 26 27 28 29 19 30 31>;
        };

        rh: right_home_row {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <300>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <35 36 37 32 33 34 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33>;
        };

        hlh: hold_layer_hold {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        hlt: hold_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
       &kp X        &kp F       &kp D        &kp P           &kp Q              &kp J          &kp SQT      &kp O        &kp U       &kp DOT
       &lh LSHFT N  &lh LALT S  &lh LCTRL T  &lh LMETA C     &kp Y              &kp M          &rh LMETA H  &rh LCTRL A  &rh LALT E  &rh RSHFT I
&kp Q  &kp B        &kp V       &kp K        &kp G           &kp W              &kp Z          &kp L        &kp SEMI     &kp FSLH    &kp COMMA    &kp BSLH
                                &none        &hlt NAV SPACE  &shft FUN LSHFT    &hlh NUM BSPC  &hlt SYM R   &none
            >;
        };

        sym_layer {
            label = "SYM";
            bindings = <
       &kp LS(LBKT)   &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(RBKT)     &none  &trans    &kp RET        &none        &trans
       &kp SEMI       &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp EQUAL        &none  &kp LGUI  &kp LCTRL      &kp LALT     &kp LSHFT
&none  &kp LS(GRAVE)  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(BSLH)     &none  &none     &kp LS(COMMA)  &kp LS(DOT)  &trans     &none
                                  &none       &kp LS(N0)  &kp LS(MINUS)    &none  &none     &none
            >;
        };

        num_layer {
            label = "NUM";
            bindings = <
       &kp LBKT      &kp N7  &kp N8  &kp N9  &kp RBKT         &none  &trans    &none          &none        &trans
       &kp LS(SEMI)  &kp N4  &kp N5  &kp N6  &kp LS(EQUAL)    &none  &kp LGUI  &kp LCTRL      &kp LALT     &kp LSHFT
&none  &kp GRAVE     &kp N1  &kp N2  &kp N3  &kp BSLH         &none  &none     &kp LS(COMMA)  &kp LS(DOT)  &trans     &none
                             &none   &kp N0  &kp MINUS        &none  &none     &none
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
       &kp LS(LA(LC(LG(N1))))  &kp LS(LA(LC(LG(N2))))  &kp LS(LA(LC(LG(N3))))  &kp LS(LA(LC(LG(N4))))  &kp LS(LA(LC(LG(N5))))    &none    &kp HOME  &kp UP    &kp PG_UP  &none
       &kp LSHFT               &kp LALT                &kp LCTRL               &kp LGUI                &none                     &none    &kp LEFT  &kp DOWN  &kp RIGHT  &kp TAB
&none  &kp LS(LA(LC(LG(N6))))  &kp LS(LA(LC(LG(N7))))  &kp LS(LA(LC(LG(N8))))  &kp LS(LA(LC(LG(N9))))  &kp LS(LA(LC(LG(N0))))    &none    &kp END   &none     &kp PG_DN  &none    &none
                                                       &none                   &none                   &none                     &kp RET  &kp ESC   &none
            >;
        };

        fun_layer {
            label = "FUN";
            bindings = <
       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none       &none   &kp F7  &kp F8  &kp F9  &kp F12
       &kp LSHFT     &kp LALT      &kp LCTRL     &kp LGUI      &none       &none   &kp F4  &kp F5  &kp F6  &kp F11
&none  &none         &none         &none         &none         &kp BSLH    &none   &kp F1  &kp F2  &kp F3  &kp F10  &none
                                   &none         &none         &none       &trans  &trans  &none
            >;
        };
    };
};
